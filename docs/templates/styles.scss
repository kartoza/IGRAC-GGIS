/* Sass property declarations - these two files contain stuff you can edit.
   Don't edit anything in this file unless you are wanting to improve the base style.
   This file is only used for the pdf generation.
  */
@import "variables.scss";
@import "graphics.scss";
/* To debug and define css rules, run the generator in debug mode
     by editing mkdocs-pdf.yml and enabling debug mode. Then
     redirect the generator output to an html file e.g.
  
  ./build-docs-pdf.sh > /tmp/output.html
  xdg-open /tmp/output.html
  
     Then use the inspect tool in your browser to identify the css paths 
     of styles you want to modify.
  
  */

@import url('https://fonts.googleapis.com/css2?family=Roboto+Slab&family=Source+Code+Pro&display=swap');
@import url('https://fonts.googleapis.com/css2?family=Source+Code+Pro&display=swap');
@import url('https://fonts.googleapis.com/css2?family=Noto+Sans+Mono:wght@100&display=swap');

//
// Print media specific page setup
// 

html {
    font-family: 'Roboto Slab', serif;
    font-size: $font-size;
    color: $font-color;
}

img {
    display: block;
    margin-left: auto;
    margin-right: auto;
    width: 50%;
}

.cover-logo {
    background-image: $logo-url;
    background-repeat: no-repeat;
    width: 440px;
    height: 440px;
    z-index: 1000;
    /* Center on page */
    margin-left: auto;
    margin-right: auto;
    margin-top: 40px;
    width: 50%;
    background-color: #fff;
    /* ensures that svg stretches to fill the container */
    background-size: contain;
}

@font-face {
    src: url(../assets/AvenirLTStd-Book.otf);
    font-family: avenir;
}

@page {
    /* size: a4 portrait; */
    size: 210mm 297mm;
    margin: 0mm;
    padding: 0mm;
    counter-increment: page;
    font-family: Georgia, serif;
    font-size: $font-size;
    white-space: normal;
    color: $font-color;
    /* 
        Margin properties next: 
  
        See https://www.quackit.com/css/at-rules/css_bottom-left-corner_at-rule.cfm
        for a nice explanation of the margin properties for css print layouts */


    @top-left-corner {
        @if $show-top-left-corner-logo {
            background: $corner-logo-url;
        }

        background-repeat: no-repeat;
        background-position: 0% 0%;
        background-size: contain;
        z-index: 99;
        //Hack needed or image will not show
        content: " ";
    }


    @top-left {
        /* Note this element gets obscured by top-center if it is solid. */
        z-index: 95;
        content: $document-title;
        color: $document-title-color;
    }

    @top-center {
        /* Idiosyncratic note: The top center section is the 
             only one that you can expand out to the full width of the page.
             Also: The left elements will render under it, the right elements
             over it (the z order increases as you move right).
  
             Be careful trying to use a PNG background as the DPI is hard to configure
             and your graphics will appear pixelated or not scale correctly 
             so rather use an SVG.
  
             The setup below will span your SVG across the page, make sure your
             SVG document has exactly the same dimensions. Leave a pixel or two
             white space to the very right of your SVG as the right edge is 
             difficult to page align.
             */
        background-color: transparent;
        /* Dont remove these two lines, they force the center element
             to the width of the page and height of the footer image. */
        min-width: 210mm;
        min-height: 22mm;
        background-repeat: no-repeat;
        background-position: 0% 0%;
        background-size: contain;
        size: 210mm 22mm;
        border: none;
        background: $header-url;
        /* Hack needed or image will not show */
        content: " ";
        z-index: 90;
    }

    @top-right {
        min-width: 100mm;
        background-color: transparent;
        /* hack to make it appear as box */
        content: " ";
    }

    @bottom-left-corner {
        /* has no effect on corner elements */
        max-width: 0mm;
        background-color: transparent;
        /* hack to make it appear as box */
        content: " ";
    }

    @bottom-left {
        background-color: transparent;
        /* hack to make it appear as box */
        content: " ";
    }

    @bottom-center {
        /* Idiosyncratic note: The bottom center section is the 
             only one that you can expand out to the full width of the page.
             Also: The left elements will render under it, the right elements
             over it (the z order increases as you move right).
  
             Be careful trying to use a PNG background as the DPI is hard to configure
             and your graphics will appear pixelated or not scale correctly 
             so rather use an SVG.
  
             The setup below will span your SVG across the page, make sure your
             SVG document has exactly the same dimensions. Leave a pixel or two
             white space to the very right of your SVG as the right edge is 
             difficult to page align.
             */
        background-color: transparent;
        /* Dont remove these two lines, they force the center element
             to the width of the page and height of the footer image. */
        min-width: 210mm;
        min-height: 22mm;
        background-repeat: no-repeat;
        background-position: 0% 0%;
        background-size: contain;
        size: 210mm 22mm;
        background: $footer-url;
        /* Note you cannot do concatenation in CSS content 
            except I figured out this little trick below TS */
        content: " " counter(page) " ";
    }

    @bottom-right {
        max-width: 0mm;
        background-color: transparent;
        /* hack to make it appear as box */
        content: " ";
    }

    @bottom-right-corner {
        /* has no effect on corner elements */
        max-width: 0mm;
        background-color: transparent;
        /* hack to make it appear as box */
        content: " ";
    }
}



/** Setting margins */

@page {
    margin: 2cm;
    padding-top: 10mm;
}


/* The first page of a print can be manipulated as well */

@page :first {
    position: absolute;
    top: 0px;
    right: 0px;
}

//
//  Heading counters and styles
//  

h1 {
    counter-increment: c1;
    counter-reset: c2;
    counter-reset: c3;
    counter-reset: c4;
}

h2 {
    counter-increment: c2;
    counter-reset: c3;
    counter-reset: c4;
}

h3 {
    counter-increment: c3;
    counter-reset: c4;
}

h4 {
    counter-increment: c4;
}

h1:before,
h2:before,
h3:before,
h4:before {
    width: 2cm;
    display: inline-block;
    text-align: right;
    padding-right: 0.25cm;
}

h1:before {
    color: $primary-color;
    content: counter(c1);
}

h2:before {
    color: $secondary-color;
    content: counter(c1) "." counter(c2);
}

h3:before {
    color: $tertiary-color;
    content: counter(c1) "." counter(c2) "." counter(c3);
}

h4:before {
    color: $primary-color;
    content: counter(c1) "." counter(c2) "." counter(c3) "." counter(c4);
}

article h1,
h2,
h3,
h4 {
    width: 100%;
    padding-right: 20pt;
    text-align: right;
    background: white;
    color: black;
    page-break-after: avoid;
    page-break-inside: avoid;
    display: inline-block;
}


article h1 {
    border-bottom: 1px solid $primary-color;
    color: $primary-color;
    padding-top: 24px;
    text-decoration-style: double;
    margin-bottom: 32px;
}

article h2 {
    color: $secondary-color;
    border-bottom: 2px solid $secondary-color;
    padding-top: 12px;
    margin-bottom: 12px;
}

article h3 {
    border-bottom: none;
    color: $tertiary-color;
    padding-top: 8px;
    margin-bottom: 8px;
}

article h4 {
    border-bottom: none;
    color: $primary-color;
    padding-top: 8px;
    margin-bottom: 8px;
}

/* MKdocs renders code blocks inside a pre element and 
    inline code simply inside code elements 
    
    Code block related items below are based on the article
    at https://css-tricks.com/styling-code-in-and-out-of-blocks/
    
    */

code {
    font-family: monospace;
    font-size: inherit;
    color: $font-color;
}


/* Code in text */

p>code,
li>code,
dd>code,
td>code {
    display: inline;
    background: $inline-code-background;
    white-space: pre-wrap;
    //max-width: 100%;
    //min-width: 100px;
    word-wrap: break-word;
    box-decoration-break: clone;
    border-radius: .2rem;
    font-size: $font-size;
    color: #000 !important;
}


/* code in blocks */

pre code:before {
    display: block;
    width: 25%;
    position: relative;
    top: -33px;
    left: -20px;
    content: 'üßë‚Äçüíª Code:';
    padding: 1em 1em;
    margin-left: 0;
    margin-top: 1em;
    margin-bottom: 1em;
    border-left: 5px solid $codeblock-label-border;
    background: $codeblock-label-background;
    font-size: $font-size;
    color: $codeblock-label-font-color;
    font-weight: bolder;
}

pre code {
    display: block;
    white-space: pre;
    max-width: 100%;
    min-width: 100px;
    padding: 0;
    font-size: $code-font-size;
    font-family: $code-font-family;
    /* margin: 1em 3em; 
      */
    padding: 1em 1em;
    margin-left: 8px;
    margin-top: 1em;
    margin-bottom: 1em;
    width: 100%;
    border-left: 5px solid $codeblock-border;
    background: $codeblock-background;
    color: $font-color;
}


/* End of code blocks */

blockquote:before {
    display: block;
    width: 25%;
    position: relative;
    top: -33px;
    left: -20px;
    content: 'üßë‚Äçüîß Note:';
    padding: 1em 1em;
    margin-top: 10mm;
    margin-left: 0;
    margin-bottom: 1em;
    border-left: 5px solid $blockquote-label-border;
    background: $blockquote-label-background;
    font-size: $font-size;
    color: $blockquote-label-font-color;
    font-weight: bolder !important;
}

blockquote {
    margin-left: 8px;
    margin-top: 0mm;
    margin-bottom: 0mm;
    width: 100%;
    border-left: 5px solid $blockquote-border;
    background: $blockquote-background;
    font-size: $font-size;
    color: $font-color;
}

blockquote p {
    margin: 0;
}

img {
    page-break-inside: avoid;
    page-break-after: avoid;
}

table,
pre {
    page-break-inside: avoid;
}

ul,
ol,
dl {
    page-break-before: avoid;
}

table {
    border-collapse: collapse;
    margin: 25px 0;
    font-size: 0.9em;
    font-family: sans-serif;
    min-width: 400px;
    box-shadow: 0 0 20px rgba(0, 0, 0, 0.15);
    margin-left: auto;
    margin-right: auto;
}


/* Next section based on https://dev.to/dcodeyt/creating-beautiful-html-tables-with-css-428l */

table thead tr {
    background-color: $primary-color;
    color: #ffffff;
    text-align: left;
}

table th,
table td {
    padding: 12px 15px;
}

table tbody tr {
    border-bottom: 1px solid $primary-color;
}

table tbody tr:nth-of-type(even) {
    background-color: #f3f3f3;
}

table tbody tr:last-of-type {
    border-bottom: 2px solid $primary-color;
}

table tbody tr.active-row {
    font-weight: bold;
    color: #009879;
}

/* End of section based on https://dev.to/dcodeyt/creating-beautiful-html-tables-with-css-428l */

ol,
ul {
    padding-top: 1ch;
    padding-bottom: 1ch;
}

li {
    padding-left: 1ch;
}

ul.li::marker {
    color: $primary-color;
    font-weight: bold;
    content: '‚ßà';
    margin-right: 10px;
}



/* CSS Reset Rules from https://perishablepress.com/a-killer-collection-of-global-css-reset-styles/ */

* {
    vertical-align: baseline;
    font-family: inherit;
    font-style: inherit;
    font-size: 100%;
    border: none;
    padding: 0;
    margin: 0;
}

h1,
h2,
h3,
h4,
h5,
h6,
p,
pre,
blockquote,
form,
ul,
ol,
dl {
    margin: 0px 0;
}

article p {
    color: $font-color;
    padding-top: 5px;
}

li,
dd,
blockquote {
    margin-left: 40px;
}


/* End of resets ------------------------------- */