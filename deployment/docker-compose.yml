version: '3.4'

# Common Django template for Geonode, Celery and Celerycam services below
x-common-django:
  &default-common-django
  build:
    context: ../
    dockerfile: deployment/docker/Dockerfile
  environment:
    # editable in .env
    - HTTPS_HOST=${HTTPS_HOST}
    - HTTPS_PORT=${HTTPS_PORT}
    - HTTP_HOST=${HTTP_HOST}
    - HTTP_PORT=${HTTP_PORT}
    - ADMIN_USERNAME=${ADMIN_USERNAME}
    - ADMIN_PASSWORD=${ADMIN_PASSWORD}
    - ADMIN_EMAIL=${ADMIN_EMAIL}
    - GEOSERVER_ADMIN_USER=${ADMIN_USERNAME}
    - GEOSERVER_ADMIN_PASSWORD=${ADMIN_PASSWORD}
    - REGISTRATION_OPEN=${REGISTRATION_OPEN}
    - TIME_ZONE=${TIME_ZONE}
    - ALLOWED_HOSTS=['nginx','127.0.0.1','localhost','$HTTPS_HOST','$HTTP_HOST']
    - SECRET_KEY=${SECRET_KEY}
    # data
    ## -- comment to disable postgis ingestion of uploaded shapefiles
    - DEFAULT_BACKEND_UPLOADER=geonode.importer
    - DEFAULT_BACKEND_DATASTORE=datastore
    # database info, ${variables} are read from .env
    - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    - GEONODE_DATABASE=${GEONODE_DATABASE}
    - GEONODE_DATABASE_PASSWORD=${GEONODE_DATABASE_PASSWORD}
    - GEONODE_GEODATABASE=${GEONODE_GEODATABASE}
    - GEONODE_GEODATABASE_PASSWORD=${GEONODE_GEODATABASE_PASSWORD}
    - DATABASE_URL=postgis://${GEONODE_DATABASE_USER}:${GEONODE_DATABASE_PASSWORD}@postgres:5432/${GEONODE_DATABASE}
    - GEODATABASE_URL=postgis://${GEONODE_GEODATABASE_USER}:${GEONODE_GEODATABASE_PASSWORD}@postgres:5432/${GEONODE_GEODATABASE}
    # hardcoded
    - CELERY_TASK_ALWAYS_EAGER=False
    - CELERY_TASK_EAGER_PROPAGATES=False
    - DEBUG=False
    - DJANGO_SETTINGS_MODULE=core.settings.prod
    - BROKER_URL=amqp://rabbitmq:5672
    - STATIC_ROOT=/home/web/static/
    - MEDIA_ROOT=/home/web/media/
    - STATIC_URL=/static/
    - MEDIA_URL=/uploaded/
    - GEOSERVER_LOCATION=http://nginx/geoserver/
    - ASYNC_SIGNALS=True
    - SESSION_EXPIRED_CONTROL_ENABLED=False
    - MONITORING_ENABLED=False
    - PYTHONPATH=/home/web/django_project:/spcgeonode
  volumes:
    - ../django_project:/home/web/django_project
    - ./volumes/static:/home/web/static:rw
    - ./volumes/media:/home/web/media:rw
  restart: on-failure

services:
  # Vanilla RabbitMQ service. This is needed by celery
  rabbitmq:
    image: rabbitmq:3.7-alpine
    volumes:
      - rabbitmq:/var/lib/rabbitmq
    restart: on-failure

  # postfix with smtp authentication (sasldb) TLS and OpenDKIM support are optional
  smtp:
    image: catatnight/postfix
    environment:
      maildomain: kartoza.com
      smtp_user: noreply:docker
    restart: unless-stopped

  # Our custom django application. It includes Geonode.
  django:
    <<: *default-common-django
    entrypoint: ["/entrypoint.sh"]
    command: 'uwsgi --ini /uwsgi.conf'

  nginx:
    image: nginx
    hostname: nginx
    volumes:
      - ./sites-enabled:/etc/nginx/conf.d:ro
      - ./volumes/logs:/var/log/nginx
      - ./volumes/static:/home/web/static:ro
      - ./volumes/media:/home/web/media:ro
    ports:
      - "${HTTP_PORT}:80"
    restart: unless-stopped

  # Geoserver backend
  geoserver:
    image: geonode/spcgeonode:geoserver-3.0
    healthcheck:
      test: "curl --fail --silent --write-out 'HTTP CODE : %{http_code}\n' --output /dev/null http://127.0.0.1:8080/geoserver/rest/workspaces/geonode.html"
      interval: 60s
      timeout: 10s
      retries: 1
      start_period: 60s
    environment:
      - HTTPS_HOST=${HTTPS_HOST}
      - HTTPS_PORT=${HTTPS_PORT}
      - HTTP_HOST=${HTTP_HOST}
      - HTTP_PORT=${HTTP_PORT}
      - ADMIN_USERNAME=${ADMIN_USERNAME}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD}
      - DATABASE_URL=postgres://${GEONODE_DATABASE_USER}:${GEONODE_DATABASE_PASSWORD}@postgres:5432/${GEONODE_DATABASE}
      - GEODATABASE_URL=postgis://${GEONODE_GEODATABASE_USER}:${GEONODE_GEODATABASE_PASSWORD}@postgres:5432/${GEONODE_GEODATABASE}
    volumes:
      - geodatadir:/spcgeonode-geodatadir/
    restart: on-failure

  # PostGIS database.
  postgres:
    # use geonode official postgis 10 image
    image: geonode/postgis:10
    environment:
      # database info, ${variables} are read from .env
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - GEONODE_DATABASE=${GEONODE_DATABASE}
      - GEONODE_DATABASE_PASSWORD=${GEONODE_DATABASE_PASSWORD}
      - GEONODE_GEODATABASE=${GEONODE_GEODATABASE}
      - GEONODE_GEODATABASE_PASSWORD=${GEONODE_GEODATABASE_PASSWORD}
      - DATABASE_URL=postgres://${GEONODE_DATABASE_USER}:${GEONODE_DATABASE_PASSWORD}@postgres:5432/${GEONODE_DATABASE}
      - GEODATABASE_URL=postgis://${GEONODE_GEODATABASE_USER}:${GEONODE_GEODATABASE_PASSWORD}@postgres:5432/${GEONODE_GEODATABASE}
    volumes:
      - database:/var/lib/postgresql/data/
      - ./backups:/backups
    restart: on-failure
    ports:
      - "25432:5432"

  # Celery worker that executes celery tasks created by Django.
  celery:
    <<: *default-common-django
    command: 'celery -A geonode.celery_app:app worker -B -E --statedb=worker.state -s celerybeat-schedule --loglevel=DEBUG --concurrency=10 -n worker1@%h'

  # django application for development
  dev:
    <<: *default-common-django
    entrypoint: []
    build:
      context: ../
      dockerfile: deployment/docker/Dockerfile-dev
    depends_on:
      - geoserver
      - postgres
      - celery
    ports:
      # for django test server
      - "3002:8080"
      # for ssh
      - "3003:22"

volumes:
  database:
  geodatadir:
  certificates:
  pgdumps:
  rabbitmq:
