FROM zenika/alpine-maven as maven_builder

# Install utilities
RUN  apk update \
     && apk add nano \
     && apk add curl \
     && apk add git \
     && rm -rf /var/cache/apk/*

RUN git clone https://github.com/geosolutions-it/MapStore2

# set working directory
RUN mv MapStore2 webapp
WORKDIR /webapp

# Copy setup files
COPY ./setup/backend/geostore-datasource-ovr.properties ./docker/
COPY ./setup/backend/sample_users.xml ./docker/
COPY ./setup/backend/sample_categories.xml ./docker/
COPY ./setup/backend/pom.xml ./web/

# build war file
WORKDIR /webapp/web
RUN mvn install

# Uncomment to use generated .war file for local development because building war takes so much time.
#WORKDIR /webapp/web/target
#COPY mapstore.war /webapp/web/target/

WORKDIR /webapp

# ================


FROM tomcat:7.0.92-jre7-alpine

# Install utilities
RUN  apk update \
     && apk add nano \
     && apk add curl \
     && apk add git \
     && rm -rf /var/cache/apk/*

# Tomcat specific options
ENV CATALINA_BASE "$CATALINA_HOME"
ENV JAVA_OPTS="${JAVA_OPTS}  -Xms512m -Xmx512m -XX:MaxPermSize=128m"


# Add war files to be deployed
COPY --from=maven_builder /webapp/web/target/*.war "${CATALINA_BASE}/webapps/"

# Geostore externalization template. Disabled by default
COPY --from=maven_builder /webapp/docker/geostore-datasource-ovr.properties "${CATALINA_BASE}/conf/"
COPY --from=maven_builder /webapp/docker/sample_users.xml "${CATALINA_BASE}/conf/"
COPY --from=maven_builder /webapp/docker/sample_categories.xml "${CATALINA_BASE}/conf/"
ARG GEOSTORE_OVR_OPT="file://${CATALINA_BASE}/conf/geostore-datasource-ovr.properties"
ENV JAVA_OPTS="-Dgeostore-ovr=$GEOSTORE_OVR_FILE"
#ENV JAVA_OPTS="${JAVA_OPTS} ${GEOSTORE_OVR_OPT}"

# Set variable to better handle terminal commands
ENV TERM xterm

EXPOSE 8080
