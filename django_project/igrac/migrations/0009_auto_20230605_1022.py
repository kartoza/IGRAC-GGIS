# Generated by Django 3.2.16 on 2023-06-05 10:22

import django.contrib.postgres.fields
import django.db.models.deletion
from django.db import migrations, models

from geonode.layers.models import Dataset
from igrac.models.site_preference import SitePreference


def run(apps, schema_editor):
    site_preference = SitePreference.objects.first()
    try:
        site_preference.well_and_monitoring_data_layer = Dataset.objects.get(
            store='groundwater', name='Groundwater_Well'
        )
    except Dataset.DoesNotExist:
        pass
    try:
        site_preference.ggmn_layer = Dataset.objects.get(
            store='groundwater', name='Groundwater_Well_GGMN'
        )
    except Dataset.DoesNotExist:
        pass
    site_preference.save()


class Migration(migrations.Migration):
    dependencies = [
        ('layers', '0044_alter_dataset_unique_together'),
        ('igrac', '0008_igracprofile_organization_types'),
    ]

    operations = [
        migrations.AddField(
            model_name='sitepreference',
            name='ggmn_layer',
            field=models.OneToOneField(blank=True, null=True,
                                       on_delete=django.db.models.deletion.SET_NULL,
                                       related_name='preference_ggmn_layer',
                                       to='layers.dataset'),
        ),
        migrations.AddField(
            model_name='sitepreference',
            name='well_and_monitoring_data_layer',
            field=models.OneToOneField(blank=True, null=True,
                                       on_delete=django.db.models.deletion.SET_NULL,
                                       related_name='preference_well_and_monitoring_data_layer',
                                       to='layers.dataset'),
        ),
        migrations.CreateModel(
            name='GroundwaterLayer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True,
                                        serialize=False, verbose_name='ID')),
                ('organisations', django.contrib.postgres.fields.ArrayField(
                    base_field=models.IntegerField(), size=None)),
                ('layer', models.OneToOneField(
                    on_delete=django.db.models.deletion.CASCADE,
                    to='layers.dataset')),
            ],
        ),
        migrations.RunPython(run, migrations.RunPython.noop),
    ]
